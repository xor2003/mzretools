#
# Size of the executable's load module covered by the map
#
Size 190
#
# Discovered segments, one per line, syntax is "SegmentName Type(CODE/DATA/STACK) Address"
#
Code1 CODE 0000
#
# Discovered routines, one per line, syntax is "RoutineName: Segment Type(NEAR/FAR) Extents [R/U]Block1 [R/U]Block2... [annotation1] [annotation2]..."
# The routine extents is the largest continuous block of instructions attributed to this routine and originating
# at the location determined to be the routine's entrypoint.
# Blocks are offset ranges relative to the segment that the routine belongs to, specifying address as belonging to the routine.
# Blocks starting with R contain code that was determined reachable, U were unreachable but still likely belong to the routine.
# The routine blocks may cover a greater area than the extents if the routine has disconected chunks it jumps into.
# Possible annotation types:
# ignore - ignore this routine in processing (comparison, signature extraction etc.)
# complete - this routine was completely reconstructed into C, only influences stat display when printing map
# external - is part of an external library (e.g. libc), ignore in comparison, don't count as uncompleted in stats
# detached - routine has no callers, looks useless, don't count as uncompleted in stats
# assembly - routine was written in assembly, don't include in comparisons by default
# duplicate - routine is a duplicate of another
#
r1: Code1 NEAR 0064-00c8
r3: Code1 NEAR 012c-0190
#
# Discovered variables, one per line, syntax is "VariableName: Segment VAR OffsetWithinSegment"
#
